[day05]

1. 배열 Array
	1) 같은 데이터 타입의 여러 변수를 합쳐놓은 것
	2) 데이터 저장 공간 수정/변경이 X
	3) 변수 = 값 1개 저장, 배열 = 값 여러개 저장
	4) 선언 
		타입[] 변수명;	int[] score;
		타입 변수명[];	int score[];

		int[] score;

		int : 배열 타입 : 배열에 저장될 데이터의 타입
		[]   : 배열선언
		score : 배열에 대한 레퍼런스 (참조)//값이 저장된 주소값을 갖고있는// 변수
		
		선언만으로는 배열의 공간이 할당되지 않으며, 
		score라는 레퍼런스 변수만 생성된다.
		레퍼런스 변수는 배열공간에 대한 주소값 (레퍼런스값) 을 가지며 
		배열 공간이 생성되지 않았으므로 선언만 할시, 레퍼런스변수의 초기값은 null이다.
		-> 레퍼런스 : 주소, 레퍼런스 변수 : 주소를 저장하는 변수

	5) 생성
		레퍼런스 변수 = new 타입[방개수];
		score = new int[3];

		new : 메모리 할당 키워드
		int : 배열 타입 : 실제 저장될 데이터의 타입
		[5] : 배열 방의 개수

	6) 인덱스 index
		배열의 방은 0부터 시작하는 방번호가 매겨지며 이를 인덱스라 한다.
		인덱스를 이용하여 배열의 각 방에 접근 가능.
		
		score[0] = 10;

	7) length
		배열의 길이(방갯수)를 알려주는 명령어.
	
		score.length ---> 5

	8) 배열은 연속되는 숫자를 방번호로 갖고있어서 (index)
		반복문과 함께 자주 사용된다.	

	9) 초기화
		
		int [] score = { 100,90,80,70,60 };
		int [] score = new int[]{ 100,90,80,70,60 };

		중괄호 안에 요소 갯수를 계산해서 방크기 자동으로 만들어주고,
		순서대로 값도 대입시켜줌.
		선언과 초기화를 따로 분시리시면 에러!!!
		
		int [] score;
		score = { 1,2,3,4,5 };  (X) 불가능
		


